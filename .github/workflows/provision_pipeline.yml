name: Provision pipeline
run-name: ${{github.actor}} is provisioning new resource
on: 

  workflow_dispatch:
    inputs:
        environment:
            type: choice
            options:
                - prod
            required: true
        action:
            type: choice
            options:
                - apply
                - destroy
        

jobs:
  provision:
    runs-on: ubuntu-latest
    env:
        is-destroy: ${{inputs.action == 'destroy'}}

    permissions:
      id-token: write
      contents: read
      
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_IAM_ROLE_ARN }}
    

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with: 
            node-version: 20

      - name: Install packages
        run: npm i 

      - name: Zip trigger worker source code
        run: |
         cp "src/trigger_worker/index.mjs" "index.mjs"
         zip -r trigger-worker.zip index.mjs node_modules package.json package-lock.json
         rm -f index.mjs

      - name: Zip daily message source code
        run: |
          cp "src/daily_message/index.mjs" "index.mjs"
          zip -r daily_message.zip index.mjs node_modules package.json package-lock.json
          rm -f index.mjs

      - name: Zip drink water reminder source code
        run: |
         cp "src/drink_water_reminder/index.mjs" "index.mjs"
         zip -r drink_water_reminder.zip index.mjs node_modules package.json package-lock.json
         rm -f index.mjs


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Checking Terraform configuration
        run: terraform init
        working-directory: iac

      - name: Add secerts key to terraform
        env:
          DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
          GUILD_ID: ${{secrets.GUILD_ID}}
          GOOGLE_GEMINI_KEY: ${{secrets.GOOGLE_GEMINI_KEY}}
        run: |
            echo -e "\ndiscord_token = \"${{ env.DISCORD_TOKEN }}\"" >> "${{inputs.environment}}.tfvars"
            echo -e "\nguild_id = \"${{ env.GUILD_ID }}\"" >> "${{inputs.environment}}.tfvars"
            echo -e "\ngoogle_gemini_key = \"${{ env.GOOGLE_GEMINI_KEY }}\"" >> "${{inputs.environment}}.tfvars"
        working-directory: iac

      - name: Validate Terraform syntax
        run: terraform validate
        working-directory: iac

      - name: Execute Terraform
        if: ${{env.is-destroy == 'false'}} 
        run: terraform apply -auto-approve -var-file="${{inputs.environment}}.tfvars"
        working-directory: iac

      - name: Destroy iac
        if: ${{env.is-destroy == 'true'}}
        run: terraform destroy -auto-approve
        working-directory: iac

      
          
    


