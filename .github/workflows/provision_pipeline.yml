name: Provision pipeline
run-name: ${{github.actor}} is provisioning new resource
on: 

  workflow_dispatch:
    inputs:
        environment:
            type: choice
            options:
                - prod
            required: true
        action:
            type: choice
            options:
                - apply
                - destroy
        

jobs:
  provision:
    runs-on: ubuntu-latest
    env:
        is-destroy: ${{inputs.action == 'destroy'}}

    permissions:
      id-token: write
      contents: read
      
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_IAM_ROLE_ARN }}
       
      - name: Add secert key to terraform
        env: 
            DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
            GUILD_ID: ${{secrets.GUILD_ID}}    
        run: |
            echo DISCORD_TOKEN = "${{env.DISCORD_TOKEN}}" >> ${{inputs.environment}}.tfvars
            echo GUILD_ID = "${{env.GUILD_ID}}" >> ${{inputs.environment}}.tfvars


      - name: Zip source code
        run: zip -r discord_chat_bot.zip index.js node_modules package.json package-lock.json

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Checking Terraform configuration
        run: terraform init
        working-directory: iac

      - name: Validate Terraform syntax
        run: terraform validate
        working-directory: iac

      - name: Execute Terraform
        if: ${{env.is-destroy}} == 'false'
        run: terraform apply -auto-approve -var-file="${{inputs.environment}}.tfvars"
        working-directory: iac

      - name: Destroy iac
        if: ${{env.is-destroy}} == 'true'
        run: terraform destroy
        working-directory: iac

      
          
    


